{"version":3,"sources":["components/TaskForm.js","components/TaskSearch.js","components/TaskSort.js","components/TaskControl.js","components/TaskItem.js","components/TaskList.js","App.js","serviceWorker.js","index.js"],"names":["TaskForm","props","onSubmit","e","preventDefault","state","onCloseForm","onClearForm","setState","name","status","id","this","taskEdit","nextProps","title","className","onClick","htmlFor","type","value","onChange","target","Component","TaskSearch","onSearch","keyword","toLowerCase","TaskSort","onSort","sortBy","sortValue","selectedAZ","selectedZA","selectedActive","selectedInactive","data-toggle","role","href","TaskControl","TaskItem","onUpdateStatus","task","onDelete","onUpdate","index","TaskList","onFilter","filterName","filterStatus","elementTask","tasks","map","key","App","onGenerateData","generateId","localStorage","setItem","JSON","stringify","onToggleForm","isDisplayForm","data","push","findIndex","result","forEach","splice","onOpenForm","filter","sort","by","getItem","parse","Math","floor","random","toString","substring","s4","indexOf","a","b","elementForm","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0b1b1e0e.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass TaskForm extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      id: '',\n      name: '',\n      status: true\n    }\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.props.onCloseForm();\n    this.onClearForm();\n  }\n\n  onClearForm = () => {\n    this.setState({\n      name: '',\n      status: true\n    })\n  }\n\n  componentDidMount() {\n    if (this.props.taskEdit) {\n      let { taskEdit } = this.props;\n      this.setState({\n        id: taskEdit.id,\n        name: taskEdit.name,\n        status: taskEdit.status\n      })\n    }\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      id: '',\n      name: '',\n      status: true\n    })\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n\n    if (nextProps && nextProps.taskEdit) {\n      let { taskEdit } = nextProps;\n      this.setState({\n        id: taskEdit.id,\n        name: taskEdit.name,\n        status: taskEdit.status\n      })\n    } else {\n      this.setState({\n        id: '',\n        name: '',\n        status: true\n      })\n    }\n  }\n\n  render() {\n\n    let title = this.state.id !== '' ? 'Cập nhật công việc' : 'Thêm công việc'\n\n    return (\n      <div className=\"box box-primary\">\n        <div className=\"box-header with-border\">\n          <span className=\"btn pull-right cursor\" onClick={this.props.onCloseForm}><i className=\"fa fa-close\"></i></span>\n          <h3 className=\"box-title\">{title}</h3>\n        </div>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"box-body\">\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputEmail1\">Tên công việc</label>\n              <input type=\"text\" className=\"form-control\" name=\"name\" value={this.state.name} onChange={e => this.setState({ name: e.target.value })} />\n            </div>\n            <div className=\"form-group\">\n              <label>Trạng thái</label>\n              <select className=\"form-control select2\" name=\"status\" value={this.state.status} onChange={e => this.setState({ status: e.target.value === 'true' ? true : false })}>\n                <option value={true}>Kích hoạt</option>\n                <option value={false}>Ẩn</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"box-footer\">\n            <button type=\"submit\" className=\"btn btn-primary\">Lưu</button>&nbsp;\n            <button type=\"button\" className=\"btn btn-default\" onClick={this.onClearForm}>Hủy</button>\n          </div>\n        </form>\n      </div>\n\n    )\n  }\n}\n\nexport default TaskForm;\n","import React, { Component } from 'react'\n\nclass TaskSearch extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      keyword: ''\n    }\n  }\n\n  onSearch = () => {\n    let {keyword} = this.state;\n    this.props.onSearch(keyword);\n  }\n\n  render() {\n    \n    return (\n      <div className=\"col-xs-8\">\n        <div className=\"input-group\">\n          <input type=\"text\" className=\"form-control\" onChange={e => this.setState({keyword: e.target.value.toLowerCase()})} />\n          <span className=\"input-group-btn\">\n            <button type=\"button\" className=\"btn btn-primary\" onClick={this.onSearch}>Tìm</button>\n          </span>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default TaskSearch;\n","import React, { Component } from 'react'\n\nclass TaskSort extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sortBy: 'name',\n      sortValue: 1\n    }\n  }\n\n  onSort = (sortBy, sortValue) => {\n    this.props.onSort(sortBy, sortValue);\n    this.setState({\n      sortBy, sortValue\n    })\n  }\n\n  render() {\n    let { sortBy, sortValue } = this.state;\n    let selectedAZ = (sortBy === 'name' && sortValue === 1) ? 'selected' : '';\n    let selectedZA = (sortBy === 'name' && sortValue === -1) ? 'selected' : '';\n    let selectedActive = (sortBy === 'status' && sortValue === 1) ? 'selected' : '';\n    let selectedInactive = (sortBy === 'status' && sortValue === -1) ? 'selected' : '';\n\n    return (\n      <div className=\"col-xs-4\">\n        <div className=\"btn-group\">\n          <button type=\"button\" className=\"btn btn-primary\">Sắp xếp</button>\n          <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\">\n            <span className=\"caret\" />\n          </button>\n          <ul className=\"dropdown-menu\" role=\"menu\">\n            <li onClick={() => this.onSort('name', 1)}><a href=\"\\#\" className={selectedAZ}>Tên A-Z</a></li>\n            <li onClick={() => this.onSort('name', -1)}><a href=\"\\#\" className={selectedZA}>Tên Z-A</a></li>\n            <li className=\"divider\" />\n            <li onClick={() => this.onSort('status', 1)}><a href=\"\\#\" className={selectedActive}>Trạng thái kích hoạt</a></li>\n            <li onClick={() => this.onSort('status', -1)}><a href=\"\\#\" className={selectedInactive}>Trạng thái ẩn</a></li>\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default TaskSort;\n","import React, { Component } from 'react'\nimport TaskSearch from './TaskSearch'\nimport TaskSort from './TaskSort'\n\nclass TaskControl extends Component {\n  render() {\n    return (\n      <div className=\"col-md-7\">\n        <div className=\"row\">\n          <TaskSearch onSearch={this.props.onSearch} />\n          <TaskSort onSort={this.props.onSort} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default TaskControl;\n","import React, { Component } from 'react'\n\nclass TaskItem extends Component {\n\n  onUpdateStatus = () => {\n    this.props.onUpdateStatus(this.props.task.id)\n  }\n\n  onDelete = () => {\n    this.props.onDelete(this.props.task.id);\n  }\n\n  onUpdate = () => {\n    this.props.onUpdate(this.props.task.id);\n  }\n\n  render() {\n    const { task, index } = this.props;\n    const className = task.status ? 'success' : 'danger'\n    const status = task.status ? 'Kích hoạt' : 'Ẩn'\n    return (\n      <tr>\n        <td>{index + 1}</td>\n        <td>{task.name}</td>\n        <td className=\"text-center\">\n          <span className={`btn label label-${className}`} onClick={this.onUpdateStatus} >{status}</span>\n        </td>\n        <td>\n          <button className=\"btn btn-success mr-3\" onClick={this.onUpdate}><i className=\"fa fa-edit\"></i></button>&nbsp;\n          <button className=\"btn btn-danger\" onClick={this.onDelete}><i className=\"fa fa-trash\"></i></button>\n        </td>\n      </tr>\n    )\n  }\n}\n\nexport default TaskItem;\n","import React, { Component } from 'react'\nimport TaskItem from './TaskItem'\n\nclass TaskList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      filterName: '',\n      filterStatus: -1\n    }\n  }\n\n  onChange = (e) => {\n    let { name, value } = e.target;\n    this.setState({\n      [name]: value\n    })\n    this.props.onFilter(\n      name === 'filterName' ? value : this.state.filterName,\n      name === 'filterStatus' ? +value : +this.state.filterStatus\n    )\n  }\n\n  render() {\n    let { tasks } = this.props;\n    let elementTask = tasks.map((task, index) => {\n      return <TaskItem\n        task={task}\n        index={index}\n        key={index}\n        onUpdateStatus={this.props.onUpdateStatus}\n        onDelete={this.props.onDelete}\n        onUpdate={this.props.onUpdate}\n      />\n    })\n    return (\n      <table id=\"example1\" className=\"table table-bordered table-striped\">\n        <thead>\n          <tr>\n            <th>STT</th>\n            <th>Tên</th>\n            <th>Trạng thái</th>\n            <th>Xử lý</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td></td>\n            <td>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"filterName\"\n                value={this.state.filterName}\n                onChange={this.onChange}\n              />\n            </td>\n            <td>\n              <select\n                className=\"form-control\"\n                name=\"filterStatus\"\n                value={this.state.filterStatus}\n                onChange={this.onChange}\n              >\n                <option value={-1}>Tất cả</option>\n                <option value={0}>Ẩn</option>\n                <option value={1}>Hiện</option>\n              </select>\n            </td>\n            <td></td>\n          </tr>\n          {elementTask}\n        </tbody>\n      </table>\n    )\n  }\n}\n\nexport default TaskList;\n","import React, { Component } from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport TaskControl from './components/TaskControl';\nimport TaskList from './components/TaskList';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      isDisplayForm: false,\n      taskEdit: null,\n      filter: {\n        name: '',\n        status: -1\n      },\n      keyword: '',\n      sort: {\n        by: 'name',\n        value: 1\n      }\n    };\n\n  }\n\n  componentDidMount() {\n    if (localStorage && localStorage.getItem('tasks')) {\n      let tasks = JSON.parse(localStorage.getItem('tasks'));\n      this.setState({\n        tasks\n      });\n    }\n  }\n\n  onGenerateData = () => {\n    let tasks = [\n      {\n        id: this.generateId(),\n        name: 'ReactJS',\n        status: true\n      },\n      {\n        id: this.generateId(),\n        name: 'AngularJS',\n        status: true\n      },\n      {\n        id: this.generateId(),\n        name: 'VueJS',\n        status: false\n      }\n    ];\n\n    this.setState({\n      tasks\n    })\n\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  generateId() {\n    return this.s4() + '-' + this.s4() + '-' + this.s4() + '-'\n      + this.s4() + '-' + this.s4() + '-' + this.s4() + '-'\n      + this.s4() + '-' + this.s4() + '-' + this.s4();\n  }\n\n  onToggleForm = () => {\n    const { isDisplayForm, taskEdit } = this.state;\n    if (isDisplayForm && taskEdit !== null) {\n      this.setState({\n        isDisplayForm: true,\n        taskEdit: null\n      })\n    } else {\n      this.setState({\n        isDisplayForm: !isDisplayForm,\n        taskEdit: null\n      })\n    }\n  }\n\n  onCloseForm = () => {\n    this.setState({\n      isDisplayForm: false\n    })\n  }\n\n  onSubmit = data => {\n    const { tasks } = this.state;\n\n    if (data.id === '') {\n      tasks.push({\n        id: this.generateId(),\n        name: data.name,\n        status: data.status\n      })\n    } else {\n      let index = this.findIndex(data.id);\n      tasks[index] = data;\n    }\n\n    this.setState({ tasks, taskEdit: null })\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n\n  onUpdateStatus = (id) => {\n    let index = this.findIndex(id);\n    let { tasks } = this.state;\n\n    if (index !== -1) {\n      tasks[index].status = !tasks[index].status;\n      this.setState({\n        tasks\n      })\n    }\n\n    localStorage.setItem('tasks', JSON.stringify(tasks))\n  }\n\n  findIndex = id => {\n\n    let { tasks } = this.state\n    let result = -1\n    tasks.forEach((task, index) => {\n      if (task.id === id) {\n        result = index;\n      }\n    })\n    return result;\n  }\n\n  onDelete = id => {\n    let index = this.findIndex(id);\n    let { tasks } = this.state;\n    if (index !== -1) {\n      tasks.splice(index, 1);\n      this.setState({\n        tasks\n      })\n    }\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n    this.onCloseForm();\n  }\n\n  onOpenForm = () => {\n    this.setState({\n      isDisplayForm: true\n    })\n  }\n\n  onUpdate = id => {\n    let index = this.findIndex(id);\n    let { tasks } = this.state;\n    let taskEdit = tasks[index];\n    this.setState({\n      taskEdit: taskEdit\n    })\n    this.onOpenForm();\n  }\n\n  onFilter = (filterName, filterStatus) => {\n    this.setState({\n      filter: {\n        name: filterName.toLowerCase(),\n        status: filterStatus\n      }\n    })\n  }\n\n  onSearch = keyword => {\n    this.setState({\n      keyword\n    })\n\n  }\n\n  onSort = (sortBy, sortValue) => {\n    this.setState({\n      sort: {\n        by: sortBy,\n        value: sortValue\n      }\n    })\n  }\n\n  render() {\n    let { tasks, isDisplayForm, taskEdit, filter, keyword, sort } = this.state;\n\n    if (filter) {\n      if (filter.name) {\n        tasks = tasks.filter(task => {\n          return task.name.toLowerCase().indexOf(filter.name) !== -1;\n        })\n      }\n      tasks = tasks.filter(task => {\n        if (filter.status === -1) {\n          return task\n        } else {\n          return task.status === (filter.status === 1 ? true : false)\n        }\n      })\n    };\n    if (keyword) {\n      tasks = tasks.filter(task => {\n        return task.name.toLowerCase().indexOf(keyword) !== -1\n      })\n    }\n\n    if (sort.by === 'name') {\n      tasks.sort((a, b) => {\n        if (a.name > b.name) return sort.value;\n        else if (a.name < b.name) return -(sort.value);\n        else return 0\n      })\n    } else {\n      tasks.sort((a, b) => {\n        if (a.status > b.status) return -sort.value;\n        else if (a.name < b.name) return sort.value;\n        else return 0\n      })\n    }\n\n\n    const elementForm = isDisplayForm\n      ? <TaskForm\n        onSubmit={this.onSubmit}\n        onCloseForm={this.onCloseForm}\n        taskEdit={taskEdit}\n      />\n      : '';\n\n    return (\n      <div className=\"container\" >\n        <div className=\"row\">\n          <div className=\"header text-center\">\n            <h1>QUẢN LÝ CÔNG VIỆC</h1>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className={isDisplayForm ? 'col-xs-3' : ''}>\n            {elementForm}\n          </div>\n          <div className={isDisplayForm ? 'col-xs-9' : 'col-xs-12'}>\n            <div className=\"box box-primary\">\n              <div className=\"box-header row\">\n                <div className=\"btn-group col-xs-5\">\n                  <button className=\"btn btn-primary\" onClick={this.onToggleForm}>Thêm công việc</button>\n                  <button className=\"btn btn-warning\" onClick={this.onGenerateData}>Generate Data</button>\n                </div>\n                <TaskControl onSearch={this.onSearch} onSort={this.onSort} />\n              </div>\n              <div className=\"box-body\">\n                <TaskList tasks={tasks}\n                  onUpdateStatus={this.onUpdateStatus}\n                  onDelete={this.onDelete}\n                  onUpdate={this.onUpdate}\n                  onFilter={this.onFilter}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}